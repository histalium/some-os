[org 0x7c00]
mov ah, 0x00
mov al, 0x12
int 0x10

;   #     #
;    #   #
;   #######
;   # ### #
;  ## ### ##
; ###########
; # ####### #
; # #     # #
;    #   #
;     # #
mov ah, 0x0c
mov al, 0x02
mov cx, 0x32
mov dx, 0x64
int 0x10
add cx, 0x06
int 0x10
mov cx, 0x33
add dx, 0x01
int 0x10
add cx, 0x04
int 0x10
mov cx, 0x32
add dx, 0x01
int 0x10
add cx, 0x01
int 0x10
add cx, 0x01
int 0x10
add cx, 0x01
int 0x10
add cx, 0x01
int 0x10
add cx, 0x01
int 0x10
add cx, 0x01
int 0x10
mov cx, 0x32
add dx, 0x01
int 0x10
add cx, 0x02
int 0x10
add cx, 0x01
int 0x10
add cx, 0x01
int 0x10
add cx, 0x02
int 0x10
mov cx, 0x31
add dx, 0x01
int 0x10
add cx, 0x01
int 0x10
add cx, 0x02
int 0x10
add cx, 0x01
int 0x10
add cx, 0x01
int 0x10
add cx, 0x02
int 0x10
add cx, 0x01
int 0x10

mov cx, 0x30
add dx, 0x01
int 0x10
line:
    add cx, 0x01
    int 0x10
    cmp cx, 0x3a
    jne line

mov cx, 0x30
add dx, 0x01
int 0x10
add cx, 0x02
int 0x10
add cx, 0x01
int 0x10
add cx, 0x01
int 0x10
add cx, 0x01
int 0x10
add cx, 0x01
int 0x10
add cx, 0x01
int 0x10
add cx, 0x01
int 0x10
add cx, 0x02
int 0x10

mov cx, 0x30
add dx, 0x01
int 0x10
add cx, 0x02
int 0x10
add cx, 0x06
int 0x10
add cx, 0x02
int 0x10

mov cx, 0x33
add dx, 0x01
int 0x10
add cx, 0x04
int 0x10

mov cx, 0x34
add dx, 0x01
int 0x10
add cx, 0x02
int 0x10

mov ah, 0x0e ; tty mode
mov al, [g]
mov bl, 0x00

print:
    int 0x10     ; print H
    cmp bl, 0x1f ; check if 31
    je loop      ; if bl is 31 jump to loop

    add bl, 0x01 ; next color
    jmp print    ; print next

; A simple boot sector program that loops forever
loop:
    jmp loop

g:
    db "G"
space:
    db 4, 4, 0, 4

times 510-($-$$) db 0
dw 0xaa55